#!/bin/bash
## Sbshell version 3.1 

#  Covered by Apache License
#  12/14/2015
#
#

#if [[ $1 != "quiet" ]]

#then
#echo "Copyright 2015 Secret Beach Solutions

#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at

 #   http://www.apache.org/licenses/LICENSE-2.0

#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License."
#fi

# Create a comment notation that is preserved.
-() { return; }

.sb() {

- this is a comment

if [[ $1 ]] 
then
  declare -f $1
else
  declare -F # | cut -c 12-  | grep -v usb
fi

} 
sb() {  
- sb this system joins a command and its possible first variables to form an alias

echo "$1.$2() { 
 $1 $2 
 }" > $$

. $$
rm $$

}


sb.env() {


color green
env | grep --color=never "SB_"
color white

}

# Modify [module] 
sb.vi() {

if [[ "$1" ]] 
  then
  echo true
  MOD=$1
  else 
  MOD="sbshell"
  fi

vi $SB_HOME/$MOD
. $SB_HOME/$MOD

}

# Change and modify $1


# source all of the modules
sb.init(){

. ~/.sbshell/sb.ini

}

sb.init sbshell
sb.init co

sb.home() { 
cd $SB_HOME 
}

sb.file() {

export SB_FILE="${SB_BLOCK}_${SB_SEC}.${SB_TYPE}"

}

## Opens up a new shell and records input into a script session (exit to escape)
web_script() {

sb.type "ts" 

script $SB_LOCAL_URL/$SB_FILE

}

sb.grabit() {

_GRAB=$(history | tail -2 | head -1 | cut -c 8-)

(echo "## $_GRAB"
eval $_GRAB | xargs -n1 echo "#")

echo $SB_MODULE
}


sb.help() {
##sb.help Display Help

cat $SB_HOME/sbshell |  egrep "^sb.*|^##sb."  # | grep -v 'grep "##$1" $SB_HOME/sb.' | sed 's/##$1//g' > /tmp/$$

color aqua
color underline
color bold
echo "                      --> $1 <--                    "
color white
color aqua
cat /tmp/$$ | grep -v "() {"

color white

rm /tmp/$$

}

sb.set() {
export SB_MODULE=$1
}

sb.set.vi(){
sb.set $1
sb.vi $1

}

sb.onload() { 
##sb.onload Runs first as php, useful for setting up reload or debugging

vi $SB_WEB_LOCAL/$SB_PATH/.onload.php

}

sb.wvi() {
##sb.wvi  Edit index.php

vi $SB_WEB_LOCAL/$SB_PATH/index.php

}

sb.style() {
##sb.style  Edit CSS style

vi $SB_WEB_LOCAL/sb.style.css

}

sb.path() {
##sb.path Set web Path

export SB_PATH=$1
export SB_LOCAL_URL=$SB_WEB_LOCAL$SB_PATH
mkdir $SB_LOCAL_URL 2>/dev/null
cd $SB_LOCAL_URL
ln -s ../index.php . 2>/dev/null

}

sb.type() {
##sb.type Set type: php,bash,stat

export SB_TYPE=$1

_sb.file

}


sb.wassourced() {
##_wassourced returns: "yes" if code was sources in and "no" if it was called directly

echo $0 $1 $2

}


#sb.init sbshell
